<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="class">
    <name>QtBackgroundProcess::App</name>
    <filename>class_qt_background_process_1_1_app.html</filename>
    <base>QCoreApplication</base>
    <member kind="slot">
      <type>void</type>
      <name>createDefaultInstanceID</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>a1059954d51fd5aa275303a627ec13743</anchor>
      <arglist>(bool overwrite=true)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setInstanceID</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>af4743986bfcac29e54d772a29fc14a2b</anchor>
      <arglist>(QString instanceID, bool useAsSeed=true)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setForwardMasterLog</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>a8ae6d0e91bff937510e0d4bbdc1018b2</anchor>
      <arglist>(bool forwardMasterLog)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setAutoStartMaster</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>ae2b20271277525d37912bb13828a7232</anchor>
      <arglist>(bool autoStartMaster)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setIgnoreMultiStarts</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>a1af92dd061a660565e0ef79a525dd928</anchor>
      <arglist>(bool ignoreMultiStarts)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setAutoDeleteTerminals</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>a62090e7840cdb362dc69786240b6fd7c</anchor>
      <arglist>(bool autoDeleteTerminals, bool changeCurrent=false)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setAutoKillTerminals</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>ae5787f7ba8c5de626e7f7ca9ab751612</anchor>
      <arglist>(bool autoKillTerminals, bool killCurrent=false)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>newTerminalConnected</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>aa8b1a6cddc2928df99a76895e67e80d4</anchor>
      <arglist>(QtBackgroundProcess::Terminal *terminal, QPrivateSignal)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>commandReceived</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>a3e892a48255c68a03768bb9e5dbaed74</anchor>
      <arglist>(QSharedPointer&lt; QCommandLineParser &gt; parser, bool isStarter, QPrivateSignal)</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>connectedTerminalsChanged</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>ad96113846c842fa5702fe5fbec8d4da1</anchor>
      <arglist>(QList&lt; Terminal *&gt; connectedTerminals, QPrivateSignal)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>App</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>a58257f482a592c573d3f95e5fe56e3f0</anchor>
      <arglist>(int &amp;argc, char **argv, int flags=ApplicationFlags)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~App</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>a34f1f253b1cef5f4ecbac66eaf6964ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QString</type>
      <name>instanceID</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>af1e3f6b2b90dc1a15d8e0042744d4e71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>forwardMasterLog</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>a041821be87341ea682f959e5f1aeb524</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>autoStartMaster</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>a4eb0b6d8c48cedcdda30be97d29de45e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ignoreMultiStarts</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>a0a12449db4f0d1aeaa7436de85fa9f9b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>autoDeleteTerminals</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>abfb06fbeb31fc6a164f577aa21eb70be</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>autoKillTerminals</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>acb09dc3c1b731b61d2e0a613d84a6277</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParserSetupFunction</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>a29ccb7694dfee860f7f4027446b33e89</anchor>
      <arglist>(const std::function&lt; void(QCommandLineParser &amp;)&gt; &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStartupFunction</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>a07a57a45a8f168333426dae03b5c11f9</anchor>
      <arglist>(const std::function&lt; int(const QCommandLineParser &amp;)&gt; &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShutdownRequestFunction</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>ac1d4429df3c59eb17e42119f4ea89d32</anchor>
      <arglist>(const std::function&lt; bool(const QCommandLineParser &amp;, int &amp;)&gt; &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShutdownRequestFunction</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>aa84434d2c8757532641234d0df5594fa</anchor>
      <arglist>(const std::function&lt; bool(Terminal *, int &amp;)&gt; &amp;function)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>exec</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>a7dc56263561f844ab8bc85d08baa3c9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>QList&lt; Terminal * &gt;</type>
      <name>connectedTerminals</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>aec304a890f06b589084d7df4e60f00d1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setupParser</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>a3290a5811c6a129aca0997b87262c76c</anchor>
      <arglist>(QCommandLineParser &amp;parser, bool useShortOptions=true)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>startupApp</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>a60897709342db52a1d2505c28f3e58de</anchor>
      <arglist>(const QCommandLineParser &amp;parser)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>requestAppShutdown</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>a8fe9a15aaf82201b8a70d4705b1b37da</anchor>
      <arglist>(Terminal *terminal, int &amp;exitCode)</arglist>
    </member>
    <member kind="property">
      <type>QString</type>
      <name>instanceID</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>a5c6198fa60f5b0144731c5849e032ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>forwardMasterLog</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>a8478470ce2306df1dcd8f162bca8ee73</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>autoStartMaster</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>a0a2638719e0c74b12d4e18976ccaab08</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>ignoreMultiStarts</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>afc8d3c568d8a0981408474bdc3303a63</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>autoDeleteTerminals</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>a9cdc2522788442e97c76ed846b650bff</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>autoKillTerminals</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>ab51747ba6dc1c869b7a5b2207198470b</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QList&lt; Terminal * &gt;</type>
      <name>connectedTerminals</name>
      <anchorfile>class_qt_background_process_1_1_app.html</anchorfile>
      <anchor>a691dc150ad2814eb4be2936f681ea10f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>QtBackgroundProcess::GlobalTerminal</name>
    <filename>class_qt_background_process_1_1_global_terminal.html</filename>
    <base>QIODevice</base>
    <member kind="slot">
      <type>void</type>
      <name>writeLine</name>
      <anchorfile>class_qt_background_process_1_1_global_terminal.html</anchorfile>
      <anchor>a4145f421608696e79cceaa0b74a6676b</anchor>
      <arglist>(const QByteArray &amp;line, bool doFlush=true)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>flush</name>
      <anchorfile>class_qt_background_process_1_1_global_terminal.html</anchorfile>
      <anchor>a7c170a3a196375ddc7631a59602b9cee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlobalTerminal</name>
      <anchorfile>class_qt_background_process_1_1_global_terminal.html</anchorfile>
      <anchor>a77e4a10e7ef41044825390731919b516</anchor>
      <arglist>(QObject *parent=nullptr, bool enableBootBuffer=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GlobalTerminal</name>
      <anchorfile>class_qt_background_process_1_1_global_terminal.html</anchorfile>
      <anchor>a0f0e1ab757d594193f77c67ef2d19892</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSequential</name>
      <anchorfile>class_qt_background_process_1_1_global_terminal.html</anchorfile>
      <anchor>a3a35b0957aaaae78fab2ea0e4d088abc</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canReadLine</name>
      <anchorfile>class_qt_background_process_1_1_global_terminal.html</anchorfile>
      <anchor>ae4928ea9df77fab6e16e52bd024fb095</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>qint64</type>
      <name>readData</name>
      <anchorfile>class_qt_background_process_1_1_global_terminal.html</anchorfile>
      <anchor>a4bd39e77cfab7aa5a02e48aaa7870ca9</anchor>
      <arglist>(char *data, qint64 maxlen) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>qint64</type>
      <name>writeData</name>
      <anchorfile>class_qt_background_process_1_1_global_terminal.html</anchorfile>
      <anchor>a24b79b52f74b51854e8b3a8a507fcd38</anchor>
      <arglist>(const char *data, qint64 len) override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>QtBackgroundProcess::NotAllowedInRunningStateException</name>
    <filename>class_qt_background_process_1_1_not_allowed_in_running_state_exception.html</filename>
    <base>QException</base>
    <member kind="function">
      <type>const char *</type>
      <name>what</name>
      <anchorfile>class_qt_background_process_1_1_not_allowed_in_running_state_exception.html</anchorfile>
      <anchor>ac456ca7bcd02cf6e68f607cd5b6c1bfa</anchor>
      <arglist>() const noexcept override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>raise</name>
      <anchorfile>class_qt_background_process_1_1_not_allowed_in_running_state_exception.html</anchorfile>
      <anchor>a04913dcdfed822566b8fbe8625597cf7</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>QException *</type>
      <name>clone</name>
      <anchorfile>class_qt_background_process_1_1_not_allowed_in_running_state_exception.html</anchorfile>
      <anchor>a952fdaed3480b75541ebc1ac2040560d</anchor>
      <arglist>() const override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>QtBackgroundProcess::Terminal</name>
    <filename>class_qt_background_process_1_1_terminal.html</filename>
    <base>QIODevice</base>
    <member kind="slot">
      <type>void</type>
      <name>disconnectTerminal</name>
      <anchorfile>class_qt_background_process_1_1_terminal.html</anchorfile>
      <anchor>acdb8d00fa6cb46474b2350aac20928ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>setAutoDelete</name>
      <anchorfile>class_qt_background_process_1_1_terminal.html</anchorfile>
      <anchor>ad2825b538be19b0e74aac422e7050c63</anchor>
      <arglist>(bool autoDelete)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>writeLine</name>
      <anchorfile>class_qt_background_process_1_1_terminal.html</anchorfile>
      <anchor>aed92af28b4b46a07b290e0e584bb55f0</anchor>
      <arglist>(const QByteArray &amp;line, bool flush=true)</arglist>
    </member>
    <member kind="slot">
      <type>void</type>
      <name>flush</name>
      <anchorfile>class_qt_background_process_1_1_terminal.html</anchorfile>
      <anchor>a908cdfa64167279ed565d43b45470c3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>terminalDisconnected</name>
      <anchorfile>class_qt_background_process_1_1_terminal.html</anchorfile>
      <anchor>a29f320b5be31a3e8ef9b6f462c470b39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="signal">
      <type>void</type>
      <name>terminalError</name>
      <anchorfile>class_qt_background_process_1_1_terminal.html</anchorfile>
      <anchor>a4c9e1f6fa8584b8ee8ca9c670829374c</anchor>
      <arglist>(int errorCode)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Terminal</name>
      <anchorfile>class_qt_background_process_1_1_terminal.html</anchorfile>
      <anchor>aa305d31d4d1713a0b6d693c95f7491e7</anchor>
      <arglist>(TerminalPrivate *d_ptr, QObject *parent=nullptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Terminal</name>
      <anchorfile>class_qt_background_process_1_1_terminal.html</anchorfile>
      <anchor>add5a7d4dd45b68af9a0afb1cc845af2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStarter</name>
      <anchorfile>class_qt_background_process_1_1_terminal.html</anchorfile>
      <anchor>ae2f639c26137bd9c0ec9fc5e25d4d514</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>QSharedPointer&lt; QCommandLineParser &gt;</type>
      <name>parser</name>
      <anchorfile>class_qt_background_process_1_1_terminal.html</anchorfile>
      <anchor>a0e4b341d9138915f08be1939831531c8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAutoDelete</name>
      <anchorfile>class_qt_background_process_1_1_terminal.html</anchorfile>
      <anchor>a70d816f30c1583467305d91f6a5b65bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSequential</name>
      <anchorfile>class_qt_background_process_1_1_terminal.html</anchorfile>
      <anchor>a29f0725fb75fea1d89cd2d66872a3076</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>close</name>
      <anchorfile>class_qt_background_process_1_1_terminal.html</anchorfile>
      <anchor>a25c49802e89f7ee98ed51e6d20fde074</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>qint64</type>
      <name>bytesAvailable</name>
      <anchorfile>class_qt_background_process_1_1_terminal.html</anchorfile>
      <anchor>a603fca794cfa89b943a58da4eb7f22c8</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>qint64</type>
      <name>readData</name>
      <anchorfile>class_qt_background_process_1_1_terminal.html</anchorfile>
      <anchor>ab9f0fd818c8c278ddd6704bab8f7e6f2</anchor>
      <arglist>(char *data, qint64 maxlen) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>qint64</type>
      <name>writeData</name>
      <anchorfile>class_qt_background_process_1_1_terminal.html</anchorfile>
      <anchor>ad0eb73759057f03b5fc6b1f333fc251d</anchor>
      <arglist>(const char *data, qint64 len) override</arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>starter</name>
      <anchorfile>class_qt_background_process_1_1_terminal.html</anchorfile>
      <anchor>af8de7a1804220a38f35a839d7f1f72a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>QSharedPointer&lt; QCommandLineParser &gt;</type>
      <name>parser</name>
      <anchorfile>class_qt_background_process_1_1_terminal.html</anchorfile>
      <anchor>ab93a716135b2daced3c561f91f5dcc82</anchor>
      <arglist></arglist>
    </member>
    <member kind="property">
      <type>bool</type>
      <name>autoDelete</name>
      <anchorfile>class_qt_background_process_1_1_terminal.html</anchorfile>
      <anchor>aba7da15827a0a1af91e0568e80b1a2fc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>QtBackgroundProcess</name>
    <filename>namespace_qt_background_process.html</filename>
    <class kind="class">QtBackgroundProcess::App</class>
    <class kind="class">QtBackgroundProcess::GlobalTerminal</class>
    <class kind="class">QtBackgroundProcess::NotAllowedInRunningStateException</class>
    <class kind="class">QtBackgroundProcess::Terminal</class>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title></title>
    <filename>index</filename>
    <docanchor file="index" title="Features">qtbackgroundprocess_readme_label_0</docanchor>
    <docanchor file="index" title="Use Case">qtbackgroundprocess_readme_label_1</docanchor>
    <docanchor file="index" title="Download/Installation">qtbackgroundprocess_readme_label_2</docanchor>
    <docanchor file="index" title="Usage">qtbackgroundprocess_readme_label_3</docanchor>
    <docanchor file="index" title="Example">qtbackgroundprocess_readme_label_4</docanchor>
    <docanchor file="index" title="Debugging the master process">qtbackgroundprocess_readme_label_5</docanchor>
    <docanchor file="index" title="Documentation">qtbackgroundprocess_readme_label_6</docanchor>
    <docanchor file="index" title="Translations">qtbackgroundprocess_readme_label_7</docanchor>
    <docanchor file="index" title="Technical Stuff">qtbackgroundprocess_readme_label_8</docanchor>
  </compound>
</tagfile>
